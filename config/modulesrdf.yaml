# This configuration is used for PreProcess step
# It is common to all analyses: ZZ, ZH x 2

lumifilter:
    name: lumiFilterRDF
    path: Base.Modules.lumiFilter
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year

# UL only
puweightCor:
    name: puWeightRDF
    path: Corrections.LUM.puWeight
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year
        isUL: self.dataset.has_tag('ul')

bbtautau_sig_bkg:
    name: BBTauTauFilterRDF
    path: Tools.Tools.ZZ_ZH_Analysis
    parameters:
        ProcType: self.dataset.process.get_aux('ProcType', False)
        isSigBBTT: self.dataset.process.get_aux('isSigBBTT', False)
        isBkgBBTT: self.dataset.process.get_aux('isBkgBBTT', False)

dystitching:
    name: DYstitchingEasyRDF
    path: Tools.Tools.dyreweighting
    parameters:
        isDY: self.dataset.process.get_aux('isDY', False)

metfilter:
    name: MetFilterRDF
    path: Base.Modules.METfilters
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year

# also comutes TES
tauSF:
    name: tauSFRDF
    path: Corrections.TAU.tauCorrections
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)

hhlepton:
    name: HHLeptonRDF
    path: Tools.Tools.HHLepton
    parameters:
        isMC: self.dataset.process.isMC
        isV10: self.dataset.has_tag("nanoV10")
        year: self.config.year
        runEra: self.dataset.runEra
        vvvl_vsjet: self.config.deeptau.vsjet.VVVLoose
        vl_vse: self.config.deeptau.vse.VLoose
        vvl_vse: self.config.deeptau.vse.VVLoose
        t_vsmu: self.config.deeptau.vsmu.Tight
        vl_vsmu: self.config.deeptau.vsmu.VLoose
        pairType_filter: True

hhleptonVar:
    name: HHLeptonVarRDF
    path: Tools.Tools.HHLepton
    parameters:
        isMC: self.dataset.process.isMC

hhleptonVarTESup:
    name: HHLeptonVarRDF
    path: Tools.Tools.HHLepton
    parameters:
        isMC: self.dataset.process.isMC
        tau_syst: corr_up

hhleptonVarTESdown:
    name: HHLeptonVarRDF
    path: Tools.Tools.HHLepton
    parameters:
        isMC: self.dataset.process.isMC
        tau_syst: corr_down

smearing_SFs:
    name: jetSmearerRDF
    path: Corrections.JME.smearing
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        jerTag: self.config.year
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)

jer_jet:
    name: jetVarRDF
    path: Corrections.JME.smearing
    parameters:
        isMC: self.dataset.process.isMC

# also computes up and down variations
jet_tes_smeared_met:
    name: metJetTauSmearerRDF
    path: Corrections.JME.smearing
    parameters:
        isMC: self.dataset.process.isMC

jec_SFs:
    name: jecProviderRDF
    path: Corrections.JME.jec
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)
        # jec_sources: [FlavorQCD, RelativeBal, HF, BBEC1, EC2, Absolute, BBEC1_2018,
            # EC2_2018, Absolute_2018, HF_2018, RelativeSample_2018, Total]

jec_jet:
    name: jecVarRDF
    path: Corrections.JME.jec
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        # jec_sources: [FlavorQCD, RelativeBal, HF, BBEC1, EC2, Absolute, BBEC1_2018,
            # EC2_2018, Absolute_2018, HF_2018, RelativeSample_2018, Total]

jec_met:
    name: jecMETRDF
    path: Corrections.JME.jec
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        # jec_sources: [FlavorQCD, RelativeBal, HF, BBEC1, EC2, Absolute, BBEC1_2018,
            # EC2_2018, Absolute_2018, HF_2018, RelativeSample_2018, Total]

hhjets:
    name: HHJetsRDF
    path: Tools.Tools.HHJets
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        isUL: self.dataset.has_tag('ul')
        met_smear_tag: smeared
        filter: True

bjet1var:
    name: VarFromVectorRDF
    path: Base.Modules.baseModules
    parameters:
        variables: [Jet_pt_nom, Jet_eta, Jet_mass_nom]
        index: bjet1_JetIdx
        input_prefix: Jet
        output_prefix: bjet1
        condition: self.dataset.process.isMC

bjet2var:
    name: VarFromVectorRDF
    path: Base.Modules.baseModules
    parameters:
        variables: [Jet_pt_nom, Jet_eta, Jet_mass_nom]
        index: bjet2_JetIdx
        input_prefix: Jet
        output_prefix: bjet2
        condition: self.dataset.process.isMC

fatjetvar:
    name: VarFromVectorRDF
    path: Base.Modules.baseModules
    parameters:
        variables: [FatJet_pt, FatJet_eta, FatJet_mass]
        index: fatjet_JetIdx
        input_prefix: FatJet
        output_prefix: fatjet
        condition: self.dataset.process.isMC

# probably not needed if we can apply the SFs to all jets (so that we also have the corrected met!)
jecb1:
    name: jecProviderRDF
    path: Corrections.JME.jec
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        isUL: self.dataset.has_tag('ul')
        pt: bjet1_pt_nom
        eta: bjet1_eta
        mass: bjet1_mass_nom

# probably not needed if we can apply the SFs to all jets (so that we also have the corrected met!)
jecb2:
    name: jecProviderRDF
    path: Corrections.JME.jec
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        isUL: self.dataset.has_tag('ul')
        pt: bjet2_pt_nom
        eta: bjet2_eta
        mass: bjet2_mass_nom

trigSF:
    name: Htt_trigSFRDF
    path: Tools.Tools.Htt_trigSF
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)

PUjetID_SF:
    name: PUjetID_SFRDF
    path: Corrections.JME.PUjetID_SF
    parameters:
        year: self.config.year
        isMC: self.dataset.process.isMC
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)
        lep_pt: "{dau1_pt, dau2_pt}"
        lep_eta: "{dau1_eta, dau2_eta}"
        lep_phi: "{dau1_phi, dau2_phi}"
        lep_mass: "{dau1_mass, dau2_mass}"

3_w2:
    name: prescaleWeightRDF
    path: Tools.Tools.weight
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year

# Only applies to non UL samples
# 4_w2:
#     name: prefiringWeightRDF
#     path: Base.Modules.prefiringWeight
#     parameters:
#         isMC: self.dataset.process.isMC
#         isUL: self.dataset.has_tag('ul')

muSF:
    name: muSFRDF
    path: Corrections.MUO.muCorrections
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)

eleSD:
    name: eleSFRDF
    path: Corrections.EGM.eleCorrections
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)

idAndIsoSF:
    name: dauIdIsoSFRDF
    path: Tools.Tools.dauIdIso
    parameters:
        isMC: self.dataset.process.isMC

btag:
    name: btag_SFRDF
    path: Corrections.BTV.btag_SF
    parameters:
        isMC: self.dataset.process.isMC
        year: self.config.year
        isUL: self.dataset.has_tag('ul')
        ispreVFP: self.config.get_aux('ispreVFP', False)
        uncertainties: ["central", "down_hfstats2"]
        lep_pt: "{dau1_pt, dau2_pt}"
        lep_eta: "{dau1_eta, dau2_eta}"
        lep_phi: "{dau1_phi, dau2_phi}"
        lep_mass: "{dau1_mass, dau2_mass}"

svfit_ZZ:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        met_smear_tag: smeared
        AnalysisType: self.config.get_aux('AnalysisType', False)

######################################################################
# Tau Energy Scale (tes): SVFitRDF
######################################################################

svfit_tes_up:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        AnalysisType: self.config.get_aux('AnalysisType', False)
        tau_syst: corr_up

svfit_tes_down:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        AnalysisType: self.config.get_aux('AnalysisType', False)
        tau_syst: corr_down

######################################################################
# Jet Energy Resolution (JER) : SVFitRDF
######################################################################

svfit_JER_up:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        AnalysisType: self.config.get_aux('AnalysisType', False)
        jet_syst: smeared_up
        met_syst: up

svfit_JER_down:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        AnalysisType: self.config.get_aux('AnalysisType', False)
        jet_syst: smeared_down
        met_syst: down

######################################################################
# Jet Energy Scale (JES) : SVFitRDF
######################################################################

svfit_Total_up:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        AnalysisType: self.config.get_aux('AnalysisType', False)
        jet_syst: Total_up
        met_syst: Total_up
svfit_Total_down:
    name: SVFitRDF
    path: Tools.Tools.svfit
    parameters:
        isMC: self.dataset.process.isMC
        AnalysisType: self.config.get_aux('AnalysisType', False)
        jet_syst: Total_down
        met_syst: Total_down