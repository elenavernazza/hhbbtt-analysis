# config common to ZH and ZZ but specific to 2018 (nanoAOD v12)
from analysis_tools import ObjectCollection, Category, Process, Dataset, Feature, Systematic
from analysis_tools.utils import DotDict

def get_2018_v12_weights():
    weights = DotDict()
    weights.default = "1"
    # weights.total_events_weights = ["genWeight", "puWeight", "DYstitchWeight"]
    weights.total_events_weights = ["genWeight", "puWeight"]

    weights.mutau = ["genWeight", "puWeight", "DYstitchEasyWeight", "prescaleWeight", 
        "trigSF", "idAndIsoAndFakeSF", "PUjetID_SF", "L1PreFiringWeight",
        "bTagweightReshape"]
    weights.etau = weights.mutau
    weights.tautau = weights.mutau
    weights.base_selection = weights.mutau
    weights.base = weights.mutau
    weights.base_fixedGenWeight = ["genWeightFixed", "puWeight"]
    weights.base_oldGenWeight = ["genWeight", "puWeight"]

    # weights.channels_mult = {channel: jrs(weights.channels[channel], op="*")
        # for channel in weights.channels}
    return weights

def setupBtagDeeptau(self):
    self.btag=DotDict(tight=0.7264, medium=0.2770, loose=0.0494)
    self.deeptau=DotDict(
        vsjet=DotDict(VVVLoose=1, VVLoose=2, VLoose=3, Loose=4, Medium=5,
            Tight=6, VTight=7, VVTight=8),
        vse=DotDict(VVVLoose=1, VVLoose=2, VLoose=3, Loose=4, Medium=5,
            Tight=6, VTight=7, VVTight=8),
        vsmu=DotDict(VLoose=1, Loose=1, Medium=3, Tight=4),
    )
    # Working points for ParticleNet-MD XbbVsQCD (legacy training) from AN2021-005 (v10)
    self.particleNetMD_legacy=DotDict(high=0.9880, medium=0.9734, low=0.9172)

def get_common_datasets_v12(self):
    """ Needs to be called with Config object as self as it needs access to self.processes """
    p = "/eos/cms/store/group/phys_higgs/HLepRare/HTT_skim_v1/Run2_2018/"

    datasets = [
        
        ######################################## Single boson #########################################
        ###############################################################################################

        # W
        # Dataset("wjets_FXFX",
        #     folder=p + "WJetsToLNu-amcatnloFXFX",
        #     process=self.processes.get("wjets_fxfx"),
        #     xs=self.cross_section_dict["wjets_FXFX"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_FXFX_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),

        # Dataset("wjets_FXFX_0j",
        #     folder=p + "W0JetsToLNu-amcatnloFXFX",
        #     process=self.processes.get("wjets_fxfx_0j"),
        #     xs=self.cross_section_dict["wjets_FXFX_0j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_FXFX_0j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        # Dataset("wjets_FXFX_1j",
        #     folder=p + "W1JetsToLNu-amcatnloFXFX",
        #     process=self.processes.get("wjets_fxfx_1j"),
        #     xs=self.cross_section_dict["wjets_FXFX_1j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_FXFX_1j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        # Dataset("wjets_FXFX_2j",
        #     folder=p + "W2JetsToLNu-amcatnloFXFX",
        #     process=self.processes.get("wjets_fxfx_2j"),
        #     xs=self.cross_section_dict["wjets_FXFX_2j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_FXFX_2j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),

        # not used in the current wjets stitching method
        # Dataset("wjets_MLM",
        #     folder=p + "WJetsToLNu",
        #     process=self.processes.get("wjets_mlm"),
        #     xs=self.cross_section_dict["wjets_MLM"],
        #     setGenWeightToOne=True, # buggy genWeight, see https://twiki.cern.ch/twiki/bin/view/CMS/MCKnownIssues#Different_weights_at_LHE_level_f 
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_MLM_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        
        # Dataset("wjets_MLM_1j",
        #     folder=p + "W1JetsToLNu",
        #     process=self.processes.get("wjets_mlm_1j"),
        #     xs=self.cross_section_dict["wjets_MLM_1j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_MLM_1j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        # Dataset("wjets_MLM_2j",
        #     folder=p + "W2JetsToLNu",
        #     process=self.processes.get("wjets_mlm_2j"),
        #     xs=self.cross_section_dict["wjets_MLM_2j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_MLM_2j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        # Dataset("wjets_MLM_3j",
        #     folder=p + "W3JetsToLNu",
        #     process=self.processes.get("wjets_mlm_3j"),
        #     xs=self.cross_section_dict["wjets_MLM_3j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_MLM_3j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        # Dataset("wjets_MLM_4j",
        #     folder=p + "W4JetsToLNu",
        #     process=self.processes.get("wjets_mlm_4j"),
        #     xs=self.cross_section_dict["wjets_MLM_4j"],
        #     # categorization_max_events=10000,
        #     secondary_dataset="wjets_MLM_4j_aux",
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),

        Dataset("wjets_ht1", # use WJets inclusive (wjets_MLM_aux) for normalization
            folder=p + "WJetsToLNu",
            process=self.processes.get("wjets_ht1"),
            selection="LHE_HT < 100",
            # We use the WJets inclusive cross-section to renormalize
            xs=self.cross_section_dict["wjets_MLM"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_MLM_aux", 
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht2",
            folder=p + "WJetsToLNu_HT-100To200",
            process=self.processes.get("wjets_ht2"),
            xs=self.cross_section_dict["wjets_ht2"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht2_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht3",
            folder=p + "WJetsToLNu_HT-200To400",
            process=self.processes.get("wjets_ht3"),
            xs=self.cross_section_dict["wjets_ht3"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht3_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht4",
            folder=p + "WJetsToLNu_HT-400To600",
            process=self.processes.get("wjets_ht4"),
            xs=self.cross_section_dict["wjets_ht4"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht4_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht5",
            folder=p + "WJetsToLNu_HT-600To800",
            process=self.processes.get("wjets_ht5"),
            xs=self.cross_section_dict["wjets_ht5"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht5_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht6",
            folder=p + "WJetsToLNu_HT-800To1200",
            process=self.processes.get("wjets_ht6"),
            xs=self.cross_section_dict["wjets_ht6"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht6_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht7",
            folder=p + "WJetsToLNu_HT-1200To2500",
            process=self.processes.get("wjets_ht7"),
            xs=self.cross_section_dict["wjets_ht7"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht7_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wjets_ht8",
            folder=p + "WJetsToLNu_HT-2500ToInf",
            process=self.processes.get("wjets_ht8"),
            xs=self.cross_section_dict["wjets_ht8"],
            setGenWeightToOne=True,
            # categorization_max_events=10000,
            secondary_dataset="wjets_ht8_aux",
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # DY
        Dataset("dy",
            folder=p + "DYJetsToLL_M-50-amcatnloFXFX",
            process=self.processes.get("dy_incl"),
            xs=self.cross_section_dict["dy"],
            merging={
                "tautau": 10,
                "etau": 10,
                "mutau": 10,
                "elliptical_cut": 5
            },
            secondary_dataset="dy_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        Dataset("dy_ptz1",
            folder=p + "DYJetsToLL_LHEFilterPtZ-0To50-amcatnloFXFX",
            process=self.processes.get("dy_ptz1"),
            xs=self.cross_section_dict["dy_ptz1"],
            secondary_dataset="dy_ptz1_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_ptz2",
            folder=p + "DYJetsToLL_LHEFilterPtZ-50To100-amcatnloFXFX",
            process=self.processes.get("dy_ptz2"),
            xs=self.cross_section_dict["dy_ptz2"],
            secondary_dataset="dy_ptz2_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_ptz3",
            folder=p + "DYJetsToLL_LHEFilterPtZ-100To250-amcatnloFXFX",
            process=self.processes.get("dy_ptz3"),
            xs=self.cross_section_dict["dy_ptz3"],
            secondary_dataset="dy_ptz3_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_ptz4",
            folder=p + "DYJetsToLL_LHEFilterPtZ-250To400-amcatnloFXFX",
            process=self.processes.get("dy_ptz4"),
            xs=self.cross_section_dict["dy_ptz4"],
            secondary_dataset="dy_ptz4_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_ptz5",
            folder=p + "DYJetsToLL_LHEFilterPtZ-400To650-amcatnloFXFX",
            process=self.processes.get("dy_ptz5"),
            xs=self.cross_section_dict["dy_ptz5"],
            secondary_dataset="dy_ptz5_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_ptz6",
            folder=p + "DYJetsToLL_LHEFilterPtZ-650ToInf-amcatnloFXFX",
            process=self.processes.get("dy_ptz6"),
            xs=self.cross_section_dict["dy_ptz6"],
            secondary_dataset="dy_ptz6_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        Dataset("dy_0j",
            folder=p + "DYJetsToLL_0J-amcatnloFXFX",
            process=self.processes.get("dy_0j"),
            xs=self.cross_section_dict["dy_0j"],
            secondary_dataset="dy_0j_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_1j",
            folder=p + "DYJetsToLL_1J-amcatnloFXFX",
            process=self.processes.get("dy_1j"),
            xs=self.cross_section_dict["dy_1j"],
            secondary_dataset="dy_1j_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("dy_2j",
            folder=p + "DYJetsToLL_2J-amcatnloFXFX",
            process=self.processes.get("dy_2j"),
            xs=self.cross_section_dict["dy_2j"],
            secondary_dataset="dy_2j_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # EWK
        Dataset("ewk_z",
            folder=p + "EWK_ZTo2L",
            process=self.processes.get("ewk_z"),
            xs=self.cross_section_dict["ewk_z"],
            splitting=200000,
            secondary_dataset="ewk_z_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ewk_wplus",
            folder=p + "EWK_WplusToLNu",
            process=self.processes.get("ewk_wplus"),
            xs=self.cross_section_dict["ewk_wplus"],
            secondary_dataset="ewk_wplus_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ewk_wminus",
            folder=p + "EWK_WminusToLNu",
            process=self.processes.get("ewk_wminus"),
            xs=self.cross_section_dict["ewk_wminus"],
            secondary_dataset="ewk_wminus_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        ######################################## Top ##################################################
        ###############################################################################################

        # TT
        Dataset("tt_dl",
            folder=p + "TTTo2L2Nu",
            process=self.processes.get("tt_dl"),
            xs=self.cross_section_dict["tt_dl"],
            merging={
                "tautau": 20,
                "mutau": 20,
                "etau": 40,
                "elliptical_cut": 20
            },
            # scaling=(0.96639, 0.00863), # temporaily disabled until we compute our ou SF
            secondary_dataset="tt_dl_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("tt_sl",
            folder=p + "TTToSemiLeptonic",
            process=self.processes.get("tt_sl"),
            xs=self.cross_section_dict["tt_sl"],
            merging={
                "tautau": 20,
                "mutau": 60,
                "etau": 40,
                "elliptical_cut": 40
            },
            # scaling=(0.96639, 0.00863), # temporaily disabled until we compute our ou SF
            secondary_dataset="tt_sl_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("tt_fh",
            folder=p + "TTToHadronic",
            process=self.processes.get("tt_fh"),
            xs=self.cross_section_dict["tt_fh"],
            # scaling=(0.96639, 0.00863), # temporaily disabled until we compute our ou SF
            secondary_dataset="tt_fh_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # TW
        Dataset("st_tw_antitop",
            folder=p + "ST_tW_antitop_5f_InclusiveDecays",
            process=self.processes.get("tw"),
            xs=self.cross_section_dict["st_tw_antitop"],
            secondary_dataset="st_tw_antitop_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("st_tw_top",
            folder=p + "ST_tW_top_5f_InclusiveDecays",
            process=self.processes.get("tw"),
            xs=self.cross_section_dict["st_tw_top"],
            secondary_dataset="st_tw_top_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # singleT
        Dataset("st_antitop",
            folder=p + "ST_t-channel_antitop_4f_InclusiveDecays",
            process=self.processes.get("singlet"),
            xs=self.cross_section_dict["st_antitop"],
            secondary_dataset="st_antitop_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("st_top",
            folder=p + "ST_t-channel_top_4f_InclusiveDecays",
            process=self.processes.get("singlet"),
            xs=self.cross_section_dict["st_top"],
            secondary_dataset="st_top_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        ######################################## Di- and Tri-boson ####################################
        ###############################################################################################

        # VV
        Dataset("zz_dl",
            folder=p + "ZZTo4L",
            process=self.processes.get("zz"),
            xs=self.cross_section_dict["zz_dl"],
            secondary_dataset="zz_dl_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("zz_fh",
            folder=p + "ZZTo4Q",
            process=self.processes.get("zz"),
            xs=self.cross_section_dict["zz_fh"],
            secondary_dataset="zz_fh_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("zz_lnu",
            folder=p + "ZZTo2L2Nu",
            process=self.processes.get("zz"),
            xs=self.cross_section_dict["zz_lnu"],
            secondary_dataset="zz_lnu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("zz_qnu",
            folder=p + "ZZTo2Q2Nu",
            process=self.processes.get("zz"),
            xs=self.cross_section_dict["zz_qnu"],
            secondary_dataset="zz_qnu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wz_lllnu",
            folder=p + "WZTo3LNu",
            process=self.processes.get("wz"),
            xs=self.cross_section_dict["wz_lllnu"],
            secondary_dataset="wz_lllnu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wz_lnuqq",
            folder=p + "WZTo1L1Nu2Q",
            process=self.processes.get("wz"),
            xs=self.cross_section_dict["wz_lnuqq"],
            secondary_dataset="wz_lnuqq_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wz_lnununu",
            folder=p + "WZTo1L3Nu",
            process=self.processes.get("wz"),
            xs=self.cross_section_dict["wz_lnununu"],
            secondary_dataset="wz_lnununu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wz_llqq",
            folder=p + "WZTo2Q2L",
            process=self.processes.get("wz"),
            xs=self.cross_section_dict["wz_llqq"],
            secondary_dataset="wz_llqq_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ww_llnunu",
            folder=p + "WWTo2L2Nu",
            process=self.processes.get("ww"),
            xs=self.cross_section_dict["ww_llnunu"],
            secondary_dataset="ww_llnunu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ww_lnuqq",
            folder=p + "WWTo1L1Nu2Q",
            process=self.processes.get("ww"),
            xs=self.cross_section_dict["ww_lnuqq"],
            secondary_dataset="ww_lnuqq_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ww_qqqq",
            folder=p + "WWTo4Q",
            process=self.processes.get("ww"),
            xs=self.cross_section_dict["ww_qqqq"],
            secondary_dataset="ww_qqqq_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # VVV
        Dataset("zzz",
            folder=p + "ZZZ",
            process=self.processes.get("zzz"),
            xs=self.cross_section_dict["zzz"],
            secondary_dataset="zzz_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wzz",
            folder=p + "WZZ",
            process=self.processes.get("wzz"),
            xs=self.cross_section_dict["wzz"],
            secondary_dataset="wzz_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("www",
            folder=p + "WWW_4F",
            process=self.processes.get("www"),
            xs=self.cross_section_dict["www"],
            secondary_dataset="www_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wwz",
            folder=p + "WWZ_4F",
            process=self.processes.get("wwz"),
            xs=self.cross_section_dict["wwz"],
            secondary_dataset="wwz_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        ######################################## Others ###############################################
        ###############################################################################################

        # TTX
        Dataset("ttw_lnu",
            folder=p + "TTWJetsToLNu",
            process=self.processes.get("ttw"),
            xs=self.cross_section_dict["ttw_lnu"],
            secondary_dataset="ttw_lnu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttw_qq",
            folder=p + "TTWJetsToQQ",
            process=self.processes.get("ttw"),
            xs=self.cross_section_dict["ttw_qq"],
            secondary_dataset="ttw_qq_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttww",
            folder=p + "TTWW",
            process=self.processes.get("ttww"),
            xs=self.cross_section_dict["ttww"],
            secondary_dataset="ttww_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttwz",
            folder=p + "TTWZ",
            process=self.processes.get("ttwz"),
            xs=self.cross_section_dict["ttwz"],
            secondary_dataset="ttwz_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttwh",
            folder=p + "TTWH",
            process=self.processes.get("ttwh"),
            xs=self.cross_section_dict["ttwh"],
            secondary_dataset="ttwh_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttzh",
            folder=p + "TTZH",
            process=self.processes.get("ttzh"),
            xs=self.cross_section_dict["ttzh"],
            secondary_dataset="ttzh_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttz_llnunu",
            folder=p + "TTZToLLNuNu_M-10",
            process=self.processes.get("ttz"),
            xs=self.cross_section_dict["ttz_llnunu"],
            secondary_dataset="ttz_llnunu_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttz_qq",
            folder=p + "TTZToQQ",
            process=self.processes.get("ttz"),
            xs=self.cross_section_dict["ttz_qq"],
            secondary_dataset="ttz_qq_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("ttzz",
            folder=p + "TTZZ",
            process=self.processes.get("ttzz"),
            xs=self.cross_section_dict["ttzz"],
            secondary_dataset="ttzz_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        ######################################## Higgs ###############################################
        ###############################################################################################

        ## ZH_HToBB_ZToLL and ZHToTauTau are in ZZ and ZH specific configurations 
        
        # ZH_hbb       # removed since the dataset is not available TODO FIXME
        # Dataset("zh_hbb_zqq",
        #     folder=p + "ZH_Hbb_Zqq",
        #     process=self.processes.get("zh_hbb"),# the associated process is defined separately in ZZ and ZH configs since the parent process is different in each case
        #     xs=self.cross_section_dict["zh_hbb_zqq"],
        #     secondary_dataset="zh_hbb_zqq_aux",
        #     # categorization_max_events=10000,
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
            
        # WH_htt
        Dataset("wminush_htt",
            folder=p + "WminusHToTauTau_M125",
            process=self.processes.get("wh_htt"),
            # prefix="xrootd-cms.infn.it//",
            xs=self.cross_section_dict["wminush_htt"],
            secondary_dataset="wminush_htt_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("wplush_htt",
            folder=p + "WplusHToTauTau_M125",
            process=self.processes.get("wh_htt"),
            # prefix="xrootd-cms.infn.it//",
            xs=self.cross_section_dict["wplush_htt"],
            secondary_dataset="wminush_htt_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),    

        # vbf_htt (removed cause it takes very long and it's not in the datacard for HHbbtt) 
        # Dataset("vbf_htt",
        #     folder=p + "VBFHToTauTau_M125",
        #     process=self.processes.get("vbf_htt"),
        #     # prefix="xrootd-cms.infn.it//",
        #     xs=self.cross_section_dict["vbf_htt"],
        #     secondary_dataset="vbf_htt_aux",
        #     # categorization_max_events=10000,
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),

        # # ttH_hbb # [FIXME] Not available
        # Dataset("tth_bb",
        #     folder=p + "ttHTobb_M125",
        #     process=self.processes.get("tth_bb"),
        #     # prefix="xrootd-cms.infn.it//",
        #     xs=self.cross_section_dict["tth_bb"],
        #     secondary_dataset="tth_bb_aux",
        #     # categorization_max_events=10000,
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),
        # ttH_htt (not in the datacard)
        Dataset("tth_tautau",
            folder=p + "ttHToTauTau_M125",
            process=self.processes.get("tth_tautau"),
            # prefix="xrootd-cms.infn.it//",
            xs=self.cross_section_dict["tth_tautau"],
            secondary_dataset="tth_tautau_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        # ttH_hnonbb (removed cause it takes very long and it's not in the datacard for HHbbtt) 
        # Dataset("tth_nonbb",
        #     folder=p + "ttHToNonbb_M125",
        #     process=self.processes.get("tth_nonbb"),
        #     # prefix="xrootd-cms.infn.it//",
        #     xs=self.cross_section_dict["tth_nonbb"],
        #     secondary_dataset="tth_nonbb_aux",
        #     # categorization_max_events=10000,
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),

        # ggH_ZZ
        Dataset("ggH_ZZ",
            folder=p + "ggHToZZTo2L2Q",
            process=self.processes.get("ggH_ZZ"),
            # prefix="xrootd-cms.infn.it//",
            xs=self.cross_section_dict["ggH_ZZ"],
            secondary_dataset="ggH_ZZ_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        ######################################## HH bbtautau ##########################################
        ###############################################################################################

        # ggf
        Dataset("ggf_sm",
            folder=p + "GluGluToHHTo2B2Tau_node_SM",
            process=self.processes.get("ggf_sm"),
            xs=self.cross_section_dict["ggf_sm"],
            secondary_dataset="ggf_sm_aux",
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        # # vbf 
        # Dataset("vbf_sm",
        #     dataset="",
        #     process=self.processes.get("vbf_sm"),
        #     # prefix="xrootd-cms.infn.it//",
        #     xs=self.cross_section_dict["vbf_sm"],
        #     secondary_dataset="vbf_sm_aux",
        #     # categorization_max_events=10000,
        #     prefix="eoscms.cern.ch//",
        #     tags=["ul", "nanoV10"]),

        ######################################## Data #################################################
        ###############################################################################################

        # Tau 2018
        Dataset("data_tau_a",
            folder=p + "Tau_Run2018A",
            selection="pairType == 2",
            process=self.processes.get("data_tau"),
            runEra="A",
            splitting=-1,
            merging={
                "tautau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_tau_b",
            folder=p + "Tau_Run2018B",
            selection="pairType == 2",
            process=self.processes.get("data_tau"),
            runEra="B",
            splitting=-1,
            merging={
                "tautau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_tau_c",
            folder=p + "Tau_Run2018C",
            selection="pairType == 2",
            process=self.processes.get("data_tau"),
            runEra="C",
            splitting=-1,
            merging={
                "tautau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_tau_d",
            folder=p + "Tau_Run2018D",
            selection="pairType == 2",
            process=self.processes.get("data_tau"),
            runEra="D",
            splitting=-1,
            merging={
                "tautau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # EGamma 2018
        Dataset("data_etau_a",
            folder=p + "EGamma_Run2018A",
            selection="pairType == 1",
            process=self.processes.get("data_etau"),
            runEra="A",
            splitting=-1,
            merging={
                "etau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_etau_b",
            folder=p + "EGamma_Run2018B",
            process=self.processes.get("data_etau"),
            runEra="B",
            splitting=-1,
            merging={
                "etau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_etau_c",
            folder=p + "EGamma_Run2018C",
            selection="pairType == 1",
            process=self.processes.get("data_etau"),
            runEra="C",
            splitting=-1,
            merging={
                "etau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_etau_d",
            folder=p + "EGamma_Run2018D",
            selection="pairType == 1",
            process=self.processes.get("data_etau"),
            runEra="D",
            splitting=-1,
            merging={
                "etau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

        # SingleMuon 2018
        Dataset("data_mutau_a",
            folder=p + "SingleMuon_Run2018A",
            selection="pairType == 0",
            process=self.processes.get("data_mutau"),
            runEra="A",
            splitting=-1,
            merging={
                "mutau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_mutau_b",
            folder=p + "SingleMuon_Run2018B",
            process=self.processes.get("data_mutau"),
            selection="pairType == 0",
            runEra="B",
            splitting=-1,
            merging={
                "mutau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_mutau_c",
            folder=p + "SingleMuon_Run2018C",
            process=self.processes.get("data_mutau"),
            selection="pairType == 0",
            runEra="C",
            splitting=-1,
            merging={
                "mutau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),
        Dataset("data_mutau_d",
            folder=p + "SingleMuon_Run2018D",
            process=self.processes.get("data_mutau"),
            selection="pairType == 0",
            runEra="D",
            splitting=-1,
            merging={
                "mutau": 2,
            },
            # categorization_max_events=10000,
            prefix="eoscms.cern.ch//",
            tags=["ul", "nanoV10"]),

    ]
    datasets = ObjectCollection(datasets)

    return datasets